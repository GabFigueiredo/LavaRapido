/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lavarapido.view;

import java.util.List;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;
import lavarapido.controller.ClienteController;
import lavarapido.model.Cliente;

/**
 *
 * @author gabri
 */
public class TelaClientes extends javax.swing.JPanel {
    private DefaultTableModel modelo;
    private final ClienteController clienteController = new ClienteController();
    private List<Cliente> listaClientes;
    /**
     * Creates new form TelaClientes
     * @throws java.sql.SQLException
     */
    public TelaClientes() throws SQLException {
        initComponents();
        configurarTabela();
        atualizarTabela();
        adicionarListenerDeEdicao();
    }
    
    private void configurarTabela() {
        modelo = new DefaultTableModel(
            new String[] {"ID", "Nome", "CPF", "Telefone", "Email", "Placa"}, 0
        ) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return (column != 0 && column != 2); // ID não é editável
            }
        };

        tabelaClientes.setModel(modelo);
    }

    // Listener para detectar alterações na tabela
    private void adicionarListenerDeEdicao() {
        modelo.addTableModelListener(e -> {
            if (e.getType() == TableModelEvent.UPDATE) {
                int linha = e.getFirstRow();

                // Recupera os valores editados
                int id = (int) modelo.getValueAt(linha, 0);
                String nome = (String) modelo.getValueAt(linha, 1);
                String telefone = (String) modelo.getValueAt(linha, 3);
                String email = (String) modelo.getValueAt(linha, 4);
                String placa = (String) modelo.getValueAt(linha, 5);

                try {
                    System.out.println(nome);
                    clienteController.editarCliente(id, nome, telefone, email, placa);
                    System.out.println("Cliente atualizado com sucesso.");
                    JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Erro ao atualizar cliente: " + ex.getMessage());
                }
            }
        });
    }
    
    private void atualizarTabela() throws SQLException {
        this.listaClientes = clienteController.listarClientes();
        System.out.println("Atualizando tabela...");
        System.out.println("Número de funcionários: " + listaClientes.size());

        modelo.setRowCount(0); // Limpa a tabela

        for (Cliente cliente : listaClientes) {
            modelo.addRow(new Object[] {
                cliente.getId(),
                cliente.getNome(),
                cliente.getCpf(),
                cliente.getTelefone(),
                cliente.getEmail(),
                cliente.getPlacaVeiculo()
            });
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jSeparator2 = new javax.swing.JSeparator();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        TabelaClientePane = new javax.swing.JPanel();
        CadastrarClientTitle1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        excluirBtn = new javax.swing.JButton();
        atualizarBtn = new javax.swing.JButton();
        CadastrarClientePane = new javax.swing.JPanel();
        CadastrarClientTitle = new javax.swing.JLabel();
        Separator = new javax.swing.JSeparator();
        Inputs = new javax.swing.JPanel();
        TelefonePane = new javax.swing.JPanel();
        TelefoneInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        NomePane = new javax.swing.JPanel();
        NomeInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        EmailPane = new javax.swing.JPanel();
        EmailInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        CPFPane = new javax.swing.JPanel();
        CPFInput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        PlacaVeiculoPane = new javax.swing.JPanel();
        PlacaInput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        criarClienteBtn = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        jTabbedPane1.setTabPlacement(javax.swing.JTabbedPane.LEFT);

        CadastrarClientTitle1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CadastrarClientTitle1.setText("Todos os clientes");

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "CPF", "Telefone", "Email", "Veiculo"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaClientes);

        excluirBtn.setText("Excluir");
        excluirBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirBtnActionPerformed(evt);
            }
        });

        atualizarBtn.setText("Atualizar");
        atualizarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TabelaClientePaneLayout = new javax.swing.GroupLayout(TabelaClientePane);
        TabelaClientePane.setLayout(TabelaClientePaneLayout);
        TabelaClientePaneLayout.setHorizontalGroup(
            TabelaClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(TabelaClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(TabelaClientePaneLayout.createSequentialGroup()
                        .addComponent(atualizarBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(excluirBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(CadastrarClientTitle1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 686, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        TabelaClientePaneLayout.setVerticalGroup(
            TabelaClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TabelaClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(CadastrarClientTitle1)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(TabelaClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(excluirBtn)
                    .addComponent(atualizarBtn))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Tabela", TabelaClientePane);

        CadastrarClientTitle.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        CadastrarClientTitle.setText("Cadastrar cliente");

        jLabel2.setText("Telefone");

        javax.swing.GroupLayout TelefonePaneLayout = new javax.swing.GroupLayout(TelefonePane);
        TelefonePane.setLayout(TelefonePaneLayout);
        TelefonePaneLayout.setHorizontalGroup(
            TelefonePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(TelefoneInput, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(TelefonePaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        TelefonePaneLayout.setVerticalGroup(
            TelefonePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TelefonePaneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(TelefoneInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jLabel3.setText("Nome");

        javax.swing.GroupLayout NomePaneLayout = new javax.swing.GroupLayout(NomePane);
        NomePane.setLayout(NomePaneLayout);
        NomePaneLayout.setHorizontalGroup(
            NomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NomePaneLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(NomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NomePaneLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addContainerGap())
                    .addComponent(NomeInput)))
        );
        NomePaneLayout.setVerticalGroup(
            NomePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NomePaneLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(NomeInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jLabel5.setText("Email");

        javax.swing.GroupLayout EmailPaneLayout = new javax.swing.GroupLayout(EmailPane);
        EmailPane.setLayout(EmailPaneLayout);
        EmailPaneLayout.setHorizontalGroup(
            EmailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(EmailInput, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(EmailPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5))
        );
        EmailPaneLayout.setVerticalGroup(
            EmailPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, EmailPaneLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel5)
                .addGap(10, 10, 10)
                .addComponent(EmailInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jLabel6.setText("CPF");

        javax.swing.GroupLayout CPFPaneLayout = new javax.swing.GroupLayout(CPFPane);
        CPFPane.setLayout(CPFPaneLayout);
        CPFPaneLayout.setHorizontalGroup(
            CPFPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPFPaneLayout.createSequentialGroup()
                .addComponent(CPFInput, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(CPFPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(10, 10, 10))
        );
        CPFPaneLayout.setVerticalGroup(
            CPFPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CPFPaneLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel6)
                .addGap(10, 10, 10)
                .addComponent(CPFInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        jLabel4.setText("Placa do Veiculo");

        javax.swing.GroupLayout PlacaVeiculoPaneLayout = new javax.swing.GroupLayout(PlacaVeiculoPane);
        PlacaVeiculoPane.setLayout(PlacaVeiculoPaneLayout);
        PlacaVeiculoPaneLayout.setHorizontalGroup(
            PlacaVeiculoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PlacaVeiculoPaneLayout.createSequentialGroup()
                .addComponent(PlacaInput, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(PlacaVeiculoPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(0, 0, 0))
        );
        PlacaVeiculoPaneLayout.setVerticalGroup(
            PlacaVeiculoPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PlacaVeiculoPaneLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel4)
                .addGap(10, 10, 10)
                .addComponent(PlacaInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        criarClienteBtn.setText("Cadastrar");
        criarClienteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarClienteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InputsLayout = new javax.swing.GroupLayout(Inputs);
        Inputs.setLayout(InputsLayout);
        InputsLayout.setHorizontalGroup(
            InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputsLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PlacaVeiculoPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CPFPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NomePane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(29, 29, 29)
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(EmailPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TelefonePane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(criarClienteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        InputsLayout.setVerticalGroup(
            InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(InputsLayout.createSequentialGroup()
                        .addComponent(NomePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(CPFPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InputsLayout.createSequentialGroup()
                        .addComponent(EmailPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TelefonePane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(InputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(InputsLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(PlacaVeiculoPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(InputsLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(criarClienteBtn)))
                .addContainerGap(248, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout CadastrarClientePaneLayout = new javax.swing.GroupLayout(CadastrarClientePane);
        CadastrarClientePane.setLayout(CadastrarClientePaneLayout);
        CadastrarClientePaneLayout.setHorizontalGroup(
            CadastrarClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Separator)
            .addGroup(CadastrarClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(CadastrarClientTitle)
                .addContainerGap(569, Short.MAX_VALUE))
            .addComponent(Inputs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        CadastrarClientePaneLayout.setVerticalGroup(
            CadastrarClientePaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CadastrarClientePaneLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(CadastrarClientTitle)
                .addGap(20, 20, 20)
                .addComponent(Separator, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Inputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jTabbedPane1.addTab("Cadastrar", CadastrarClientePane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 811, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void criarClienteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarClienteBtnActionPerformed
        String Nome = NomeInput.getText().trim();
        String Cpf = CPFInput.getText().trim();
        String Telefone = TelefoneInput.getText().trim();
        String Email = EmailInput.getText().trim();
        String PlacaVeiculo = PlacaInput.getText().trim();

        // Verificações básicas
        if (Nome.isEmpty()) {
            JOptionPane.showMessageDialog(null, "O nome é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (Cpf.isEmpty() || Cpf.length() < 11) {
            JOptionPane.showMessageDialog(null, "Informe um CPF válido (mínimo 11 dígitos).", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (Telefone.isEmpty()) {
            JOptionPane.showMessageDialog(null, "O telefone é obrigatório.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (Email.isEmpty() || !Email.contains("@")) {
            JOptionPane.showMessageDialog(null, "Informe um e-mail válido.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (PlacaVeiculo.isEmpty()) {
            JOptionPane.showMessageDialog(null, "A placa do veículo é obrigatória.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        Cliente novoCliente = new Cliente(0, Nome, Cpf, Telefone, Email, PlacaVeiculo);
        
        try {
            clienteController.cadastrarCliente(novoCliente);
            JOptionPane.showMessageDialog(null, "Cliente criado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(TelaClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_criarClienteBtnActionPerformed

    private void excluirBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirBtnActionPerformed
       int linhaSelecionada = tabelaClientes.getSelectedRow();
        if (linhaSelecionada != -1) {
            int id = (int) tabelaClientes.getValueAt(linhaSelecionada, 0);
            String nome = (String) tabelaClientes.getValueAt(linhaSelecionada, 1); // nome está na coluna 1

            int confirmacao = JOptionPane.showConfirmDialog(
                this,
                "Deseja realmente excluir o cliente \"" + nome + "\"?",
                "Confirmar exclusão",
                JOptionPane.YES_NO_OPTION
            );

            if (confirmacao == JOptionPane.YES_OPTION) {
                try {
                    clienteController.excluirCliente(id);
                    atualizarTabela(); // para atualizar a exibição da tabela
                } catch (SQLException ex) {
                    Logger.getLogger(TelaClientes.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(this, "Erro ao excluir cliente: " + ex.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um cliente para excluir.");
        }
    }//GEN-LAST:event_excluirBtnActionPerformed

    private void atualizarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarBtnActionPerformed
        try {
            atualizarTabela();
        } catch (SQLException ex) {
            Logger.getLogger(TelaClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizarBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CPFInput;
    private javax.swing.JPanel CPFPane;
    private javax.swing.JLabel CadastrarClientTitle;
    private javax.swing.JLabel CadastrarClientTitle1;
    private javax.swing.JPanel CadastrarClientePane;
    private javax.swing.JTextField EmailInput;
    private javax.swing.JPanel EmailPane;
    private javax.swing.JPanel Inputs;
    private javax.swing.JTextField NomeInput;
    private javax.swing.JPanel NomePane;
    private javax.swing.JTextField PlacaInput;
    private javax.swing.JPanel PlacaVeiculoPane;
    private javax.swing.JSeparator Separator;
    private javax.swing.JPanel TabelaClientePane;
    private javax.swing.JTextField TelefoneInput;
    private javax.swing.JPanel TelefonePane;
    private javax.swing.JButton atualizarBtn;
    private javax.swing.JButton criarClienteBtn;
    private javax.swing.JButton excluirBtn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabelaClientes;
    // End of variables declaration//GEN-END:variables
}
